name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  linux:
    strategy:
      fail-fast: true
      matrix:
        config:
          - preset: linux-x64
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install System Packages
        run: |
          sudo apt-get update
          sudo apt-get install build-essential cmake ninja-build python3 python3-pip
          sudo pip3 install gcovr

      - name: Setup vcpkg
        working-directory: /opt
        run: |
          rm -rf vcpkg
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          ./vcpkg/vcpkg integrate install
          ./vcpkg/vcpkg --version
          test -d vcpkg-binary-cache || mkdir vcpkg-binary-cache

      - name: Cache Vcpkg Dependencies
        uses: actions/cache@v3
        with:
          key: ${{matrix.config.preset}}
          path: /opt/vcpkg-binary-cache

      - name: Configure
        env:
          VCPKG_ROOT: /opt/vcpkg
          VCPKG_DEFAULT_BINARY_CACHE: /opt/vcpkg-binary-cache
        run: cmake -S . --preset ${{matrix.config.preset}} -DPARSI_ENABLE_COVERAGE=ON

      - name: Build
        run: |
          cmake --build --preset ${{matrix.config.preset}} --config Debug
          cmake --build --preset ${{matrix.config.preset}} --config Release

      - name: Test Release
        run: |
          ctest -C Release --preset linux-tests

      - name: Test Debug and Coverage
        run: |
          ctest -C Debug --preset linux-tests
          cmake --build --preset ${{matrix.config.preset}} --target coverage

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/${{matrix.config.preset}}/coverage/coverage.xml
          fail_ci_if_error: true
          functionalities: fix

  windows:
    strategy:
      fail-fast: true
      matrix:
        config:
          - preset: windows-x64
    runs-on: windows-latest
    steps:
      - name: Prepare
        uses: actions/checkout@v3

      - name: Setup vcpkg
        working-directory: C:\
        shell: bash
        run: |
          rm -rf vcpkg
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.bat
          ./vcpkg/vcpkg.exe --version
          test -d vcpkg-binary-cache || mkdir vcpkg-binary-cache

      - name: Cache Vcpkg Dependencies
        uses: actions/cache@v3
        with:
          key: ${{matrix.config.preset}}
          path: C:\vcpkg-binary-cache
  
      - name: Configure
        env:
          VCPKG_ROOT: C:\vcpkg
          VCPKG_DEFAULT_BINARY_CACHE: C:\vcpkg-binary-cache
        run: cmake -S . --preset ${{matrix.config.preset}}

      - name: Build Debug
        run: cmake --build --preset ${{matrix.config.preset}} --config Debug

      - name: Build Release
        run: cmake --build --preset ${{matrix.config.preset}} --config Release

      - name: Test
        run: |
          ctest -C Release --preset windows-tests
